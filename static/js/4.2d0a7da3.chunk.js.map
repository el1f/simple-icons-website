{"version":3,"sources":["components/IconCard/styles.ts","components/IconCard/index.tsx","components/IconCardGrid/styles.ts","components/IconCardGrid/index.tsx"],"names":["Icon","styled","div","Card","props","color","Name","Typography","Color","ButtonBase","theme","palette","grey","ColorSpot","attrs","style","backgroundColor","Actions","React","memo","SVGcode","icon","name","onClick","src","copy","Tooltip","title","IconButton","component","download","href","encodeURIComponent","replace","Grid","compress","IconCardGrid","icons","onIconClick","map","slug","svg","hex","key"],"mappings":"o4EAGO,IAAMA,EAAOC,IAAOC,IAAV,KAOJC,EAAOF,IAAOC,IAAV,IAePF,GACW,SAAAI,GAAK,OAAIA,EAAMC,SAKvBC,EAAOL,YAAOM,IAAPN,CAAH,KAQJO,EAAQP,YAAOQ,IAAPR,CAAH,KAKM,SAAAG,GAAK,OAAIA,EAAMM,MAAMC,QAAQC,KAAK,QAe1B,SAAAR,GAAK,OAAIA,EAAMM,MAAMC,QAAQC,KAAK,QAUtC,SAAAR,GAAK,OAAIA,EAAMM,MAAMC,QAAQC,KAAK,QAK1B,SAAAR,GAAK,OAAIA,EAAMM,MAAMC,QAAQC,KAAK,QAMzDC,EAAYZ,IAAOC,IAAIY,OAAM,gBAAGT,EAAH,EAAGA,MAAH,MAAgB,CACtDU,MAAO,CACHC,gBAAgB,IAAD,OAAMX,OAFJJ,CAAH,KAWTgB,EAAUhB,IAAOC,IAAV,KCnCLgB,MAAMC,MAvCJ,SAAC,GAAoD,IAA5CC,EAA2C,EAAjDC,KAAeC,EAAkC,EAAlCA,KAAMjB,EAA4B,EAA5BA,MAAOkB,EAAqB,EAArBA,QAC5C,OACI,kBAACpB,EAAD,CAAME,MAAOA,EAAOkB,QAASA,GACzB,kBAACvB,EAAD,KACI,kBAAC,IAAD,CAAKwB,IAAKJ,KAEd,kBAACd,EAAD,KAAOgB,GACP,kBAACd,EAAD,CAAOe,QAAS,kBAAME,IAAKpB,KACvB,kBAACQ,EAAD,CAAWR,MAAOA,IAClB,kBAACE,EAAA,EAAD,gBACSF,GACL,wCAGR,kBAACY,EAAD,KAII,kBAACS,EAAA,EAAD,CAASC,MAAM,iBACX,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAUL,QAAS,kBAAME,IAAKL,QAGtC,kBAACM,EAAA,EAAD,CAASC,MAAM,qBACX,kBAACC,EAAA,EAAD,CACIC,UAAU,IACVC,SAAUR,EACVS,KAAI,8CAAyCC,mBACzCZ,EAAQa,QAAQ,MAAO,aAG3B,kBAAC,IAAD,a,inBC9CjB,IAAMC,EAAOjC,IAAOC,IAAV,KAUuB,SAAAE,GAAK,OAAKA,EAAM+B,SAAW,EAAI,KAG/B,SAAA/B,GAAK,OAAKA,EAAM+B,SAAW,EAAI,KAG/B,SAAA/B,GAAK,OAAKA,EAAM+B,SAAW,EAAI,MCoBxDC,UA1BmC,SAAC,GAIzB,IAHtBC,EAGqB,EAHrBA,MACAF,EAEqB,EAFrBA,SACAG,EACqB,EADrBA,YAEA,OACI,kBAACJ,EAAD,CAAMC,SAAUA,GACXE,GACGA,EAAME,KAAI,SAAAlB,GAAS,IACPmB,EAA0BnB,EAA1BmB,KAAMb,EAAoBN,EAApBM,MAAOc,EAAapB,EAAboB,IAAKC,EAAQrB,EAARqB,IAC1B,OACIF,GACI,kBAAC,EAAD,CACIG,IAAKH,EACLlB,KAAMK,EACNN,KAAMoB,EACNpC,MAAOqC,EACPnB,QAAS,kBAAMe,EAAYjB","file":"static/js/4.2d0a7da3.chunk.js","sourcesContent":["import { ButtonBase, Typography } from '@material-ui/core';\nimport styled from 'styled-components';\n\nexport const Icon = styled.div`\n    height: 40px;\n    width: 40px;\n    margin-bottom: 6px;\n    transition: all 0.2s ease-in-out;\n`;\n\nexport const Card = styled.div`\n    background: #ffffff;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    padding: 16px 12px 8px 12px;\n    border-radius: 16px;\n    cursor: pointer;\n    transition: box-shadow 0.4s ease-in-out;\n\n    &:hover {\n        box-shadow: 0 4px 24px -2px rgba(0, 0, 0, 0.1);\n\n        ${Icon} {\n            fill: #${props => props.color};\n        }\n    }\n`;\n\nexport const Name = styled(Typography)`\n    font-size: 0.8rem;\n    line-height: 1rem;\n    font-weight: 700;\n    margin-top: auto;\n    margin-bottom: auto;\n`;\n\nexport const Color = styled(ButtonBase)`\n    display: flex;\n    margin-top: 8px;\n    padding: 4px 6px 4px 4px;\n    border-radius: 8px;\n    background-color: ${props => props.theme.palette.grey[300]};\n    cursor: pointer;\n    transition: all 0.2s ease-in-out;\n\n    p {\n        font-size: 0.75rem;\n        font-weight: 700;\n        line-height: 16px;\n\n        span {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            opacity: 0;\n            background-color: ${props => props.theme.palette.grey[300]};\n            transition: background-color 0.2s ease-in-out, opacity 0.1s ease-in-out;\n        }\n    }\n\n    & > p {\n        position: relative;\n    }\n\n    &:hover {\n        background-color: ${props => props.theme.palette.grey[400]};\n\n        p {\n            span {\n                opacity: 1;\n                background-color: ${props => props.theme.palette.grey[400]};\n            }\n        }\n    }\n`;\n\nexport const ColorSpot = styled.div.attrs(({ color }) => ({\n    style: {\n        backgroundColor: `#${color}`,\n    },\n}))`\n    height: 16px;\n    width: 16px;\n    margin-right: 4px;\n    border-radius: 6px;\n`;\n\nexport const Actions = styled.div`\n    margin-top: 8px;\n\n    button,\n    a {\n        height: 32px;\n        width: 32px;\n        padding: 0;\n\n        svg {\n            height: 20px;\n            width: 20px;\n        }\n    }\n`;\n","import { IconButton, Tooltip, Typography } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/AddRounded';\nimport DownloadIcon from '@material-ui/icons/CloudDownloadOutlined';\nimport CodeIcon from '@material-ui/icons/CodeRounded';\nimport copy from 'clipboard-copy';\nimport React from 'react';\nimport SVG from 'react-inlinesvg';\n\nimport { Actions, Card, Color, ColorSpot, Icon, Name } from './styles';\n\ntype Props = {\n    icon: any;\n    name: string;\n    color: string;\n    onClick: () => void;\n};\n\nconst IconCard = ({ icon: SVGcode, name, color, onClick }: Props) => {\n    return (\n        <Card color={color} onClick={onClick}>\n            <Icon>\n                <SVG src={SVGcode} />\n            </Icon>\n            <Name>{name}</Name>\n            <Color onClick={() => copy(color)}>\n                <ColorSpot color={color} />\n                <Typography>\n                    {`#${color}`}\n                    <span>copy</span>\n                </Typography>\n            </Color>\n            <Actions>\n                {/* <IconButton>\n                    <AddIcon />\n                </IconButton> */}\n                <Tooltip title=\"Copy SVG code\">\n                    <IconButton>\n                        <CodeIcon onClick={() => copy(SVGcode)} />\n                    </IconButton>\n                </Tooltip>\n                <Tooltip title=\"Download SVG icon\">\n                    <IconButton\n                        component=\"a\"\n                        download={name}\n                        href={`data:image/svg+xml; charset=utf8, ' ${encodeURIComponent(\n                            SVGcode.replace(/></g, '>\\n\\r<'),\n                        )}`}\n                    >\n                        <DownloadIcon />\n                    </IconButton>\n                </Tooltip>\n            </Actions>\n        </Card>\n    );\n};\n\nexport default React.memo(IconCard);\n","import styled from 'styled-components';\n\nexport const Grid = styled.div<{ compress?: boolean }>`\n    display: grid;\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n    grid-column-gap: 16px;\n    grid-row-gap: 16px;\n\n    @media (min-width: 360px) {\n        grid-template-columns: repeat(3, minmax(100px, 1fr));\n    }\n    @media (min-width: 600px) {\n        grid-template-columns: repeat(${props => (props.compress ? 3 : 5)}, minmax(100px, 1fr));\n    }\n    @media (min-width: 1280px) {\n        grid-template-columns: repeat(${props => (props.compress ? 4 : 7)}, minmax(100px, 1fr));\n    }\n    @media (min-width: 1600px) {\n        grid-template-columns: repeat(${props => (props.compress ? 7 : 10)}, minmax(100px, 1fr));\n    }\n`;\n","import IconCard from 'components/IconCard';\nimport React from 'react';\nimport { SimpleIcon } from 'simple-icons';\n\nimport { Grid } from './styles';\n\ntype IconCardGridProps = {\n    icons?: SimpleIcon[];\n    compress?: boolean;\n    onIconClick: (icon: SimpleIcon) => void;\n};\n\nconst IconCardGrid: React.FC<IconCardGridProps> = ({\n    icons,\n    compress,\n    onIconClick,\n}: IconCardGridProps) => {\n    return (\n        <Grid compress={compress}>\n            {icons &&\n                icons.map(icon => {\n                    const { slug, title, svg, hex } = icon;\n                    return (\n                        slug && (\n                            <IconCard\n                                key={slug}\n                                name={title}\n                                icon={svg}\n                                color={hex}\n                                onClick={() => onIconClick(icon)}\n                            />\n                        )\n                    );\n                })}\n        </Grid>\n    );\n};\n\nexport default IconCardGrid;\n"],"sourceRoot":""}